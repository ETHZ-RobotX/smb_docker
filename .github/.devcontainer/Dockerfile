# syntax=docker/dockerfile:1

###########################################################################
########### This is the devcontainer base image for SuperMegaBot(SMB)    ##
########### It is built and pushed to Github Container Registry by CI    ##
###########################################################################

ARG SMB_REPO_BRANCH_NAME=docker
ARG SMB_RAW_REPO_URL=https://raw.githubusercontent.com/ETHZ-RobotX/SuperMegaBot/${SMB_REPO_BRANCH_NAME}

ARG BASE_IMAGE=ghcr.io/ethz-robotx/smb_ros_base:latest
ARG OVERLAY_WS=/smb_ws

# Cache package.xml and python requirements.txt
FROM $BASE_IMAGE AS cacher

ARG OVERLAY_WS
ARG SMB_REPO_BRANCH_NAME=docker
ARG SMB_RAW_REPO_URL=https://raw.githubusercontent.com/ETHZ-RobotX/SuperMegaBot/${SMB_REPO_BRANCH_NAME}

WORKDIR ${OVERLAY_WS}/src
RUN vcs import --recursive --input ${SMB_RAW_REPO_URL}/smb.repos

WORKDIR /tmp
RUN find ${OVERLAY_WS}/src -name "package.xml" | \
    xargs cp --parents -t /tmp && \
    find ${OVERLAY_WS}/src -name "requirements.txt" | \
    xargs cp --parents -t /tmp || true && \
    find ${OVERLAY_WS}/src -name "CATKIN_IGNORE" | \
    xargs cp --parents -t /tmp || true

FROM $BASE_IMAGE AS default

ARG DEBIAN_FRONTEND=noninteractive
LABEL org.opencontainers.image.source="https://github.com/ETHZ-RobotX/smb_docker"
LABEL org.opencontainers.image.description="Base development environment for the SuperMegaBot (SMB)"

# Nvidia-container-runtime
ENV NVIDIA_VISIBLE_DEVICES \
    ${NVIDIA_VISIBLE_DEVICES:-all}
ENV NVIDIA_DRIVER_CAPABILITIES \
    ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics

# Save SMB_RAW_REPO_URL as an environment variable
# It is used to fetch source code in post-create.sh script of devcontainer
ARG SMB_RAW_REPO_URL
ENV SMB_RAW_REPO_URL=${SMB_RAW_REPO_URL}

# Install SMB dependencies
# Most of the dependencies are installed in the base image
# This is only for the dependencies that added after the base image is built
ARG OVERLAY_WS
RUN --mount=type=bind,from=cacher,source=/tmp/${OVERLAY_WS}/src,target=${OVERLAY_WS}/src \
    apt-get update && \
    rosdep update && \
    rosdep install --from-paths ${OVERLAY_WS}/src --ignore-src --os=ubuntu:focal -r -y && \
    rm -rf /var/lib/apt/lists/*


